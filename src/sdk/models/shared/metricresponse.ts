/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The alerting thresholds of the metric
 */
export class MetricResponseThreshold extends SpeakeasyBase {}

/**
 * The response object for a metric
 */
export class MetricResponse extends SpeakeasyBase {
    /**
     * The code snippet for the metric
     */
    @SpeakeasyMetadata()
    @Expose({ name: "code_snippet" })
    codeSnippet?: string;

    /**
     * The passing criteria of the metric
     */
    @SpeakeasyMetadata()
    @Expose({ name: "criteria" })
    criteria?: string;

    /**
     * The description of for the metric
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * Boolean flag representing whether the metric is enabled in production
     */
    @SpeakeasyMetadata()
    @Expose({ name: "enabled_in_prod" })
    enabledInProd?: boolean;

    /**
     * The ID of the metric
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The name of the metric
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * Boolean flag representing whether the metrics needs ground-truth labeling
     */
    @SpeakeasyMetadata()
    @Expose({ name: "needs_ground_truth" })
    needsGroundTruth?: boolean;

    /**
     * Specifies when the metric will pass
     */
    @SpeakeasyMetadata()
    @Expose({ name: "pass_when" })
    passWhen?: boolean;

    /**
     * The prompt that this metric is calculated on
     */
    @SpeakeasyMetadata()
    @Expose({ name: "prompt" })
    prompt?: string;

    /**
     * The return type of the metric
     */
    @SpeakeasyMetadata()
    @Expose({ name: "return_type" })
    returnType?: string;

    /**
     * The task name for the metric
     */
    @SpeakeasyMetadata()
    @Expose({ name: "task" })
    task?: string;

    /**
     * The alerting thresholds of the metric
     */
    @SpeakeasyMetadata()
    @Expose({ name: "threshold" })
    @Type(() => MetricResponseThreshold)
    threshold?: MetricResponseThreshold;

    /**
     * The timestamp when the metric was last updated
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
