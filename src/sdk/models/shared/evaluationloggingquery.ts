/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Type } from "class-transformer";

export class EvaluationLoggingQueryComments extends SpeakeasyBase {}

export class EvaluationLoggingQueryDataset extends SpeakeasyBase {}

export class EvaluationLoggingQueryGenerations extends SpeakeasyBase {}

export class EvaluationLoggingQueryMetrics extends SpeakeasyBase {}

export class EvaluationLoggingQueryPrompts extends SpeakeasyBase {}

export class EvaluationLoggingQueryResults extends SpeakeasyBase {}

export class EvaluationLoggingQuerySummary extends SpeakeasyBase {}

/**
 * The request object for logging an evaluation
 */
export class EvaluationLoggingQuery extends SpeakeasyBase {
    /**
     * The comments for the evaluation
     */
    @SpeakeasyMetadata({ elemType: EvaluationLoggingQueryComments })
    @Expose({ name: "comments" })
    @Type(() => EvaluationLoggingQueryComments)
    comments?: EvaluationLoggingQueryComments[];

    /**
     * The dataset for which the evaluation is being created
     */
    @SpeakeasyMetadata({ elemType: EvaluationLoggingQueryDataset })
    @Expose({ name: "dataset" })
    @Type(() => EvaluationLoggingQueryDataset)
    dataset?: EvaluationLoggingQueryDataset[];

    /**
     * The name of the dataset for which the evaluation is being created
     */
    @SpeakeasyMetadata()
    @Expose({ name: "datasetName" })
    datasetName?: string;

    /**
     * The description of the evaluation
     */
    @SpeakeasyMetadata()
    @Expose({ name: "description" })
    description?: string;

    /**
     * The completions for prompts that are being evaluated
     */
    @SpeakeasyMetadata({ elemType: EvaluationLoggingQueryGenerations })
    @Expose({ name: "generations" })
    @Type(() => EvaluationLoggingQueryGenerations)
    generations?: EvaluationLoggingQueryGenerations[];

    /**
     * The id of the evaluation
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The metrics that are computed for the completions
     */
    @SpeakeasyMetadata({ elemType: EvaluationLoggingQueryMetrics, elemDepth: 2 })
    @Expose({ name: "metrics" })
    @Type(() => EvaluationLoggingQueryMetrics)
    metrics?: EvaluationLoggingQueryMetrics[][];

    /**
     * The metrics that are computed for the completions
     */
    @SpeakeasyMetadata()
    @Expose({ name: "metrics_to_compute" })
    metricsToCompute?: string[];

    /**
     * The name of the evaluation
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * The prompts for which the evaluation is being created
     */
    @SpeakeasyMetadata({ elemType: EvaluationLoggingQueryPrompts })
    @Expose({ name: "prompts" })
    @Type(() => EvaluationLoggingQueryPrompts)
    prompts?: EvaluationLoggingQueryPrompts[];

    /**
     * The results of the evaluation
     */
    @SpeakeasyMetadata({ elemType: EvaluationLoggingQueryResults })
    @Expose({ name: "results" })
    @Type(() => EvaluationLoggingQueryResults)
    results?: EvaluationLoggingQueryResults[];

    /**
     * The metric summary of the evaluation
     */
    @SpeakeasyMetadata({ elemType: EvaluationLoggingQuerySummary })
    @Expose({ name: "summary" })
    @Type(() => EvaluationLoggingQuerySummary)
    summary?: EvaluationLoggingQuerySummary[];

    /**
     * The task for which the evaluation is being created
     */
    @SpeakeasyMetadata()
    @Expose({ name: "task" })
    task?: string;

    /**
     * The user running the evaluation
     */
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    user?: string;
}
