/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

/**
 * The query for finding sessions
 */
export class GetSessionQuery extends SpeakeasyBase {}

export class GetSessionRequest extends SpeakeasyBase {
    /**
     * The maximum number of sessions to return
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
    limit?: number;

    /**
     * The project to query sessions for
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=project" })
    project?: string;

    /**
     * The query for finding sessions
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=query" })
    query?: GetSessionQuery;
}

export class GetSessionResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * OK
     */
    @SpeakeasyMetadata({ elemType: shared.SessionEventQuery })
    sessionEventQueries?: shared.SessionEventQuery[];

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
